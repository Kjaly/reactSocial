{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItems/DialogItem.jsx","components/Dialogs/Messages/Message.js","components/Dialogs/Answers/Answers.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","className","s","item","to","id","name","Message","message","messageImg","avatarImg","src","alt","messageText","Answers","answersText","maxLength100","maxLengthCreator","Textarea","Element","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","chatInput","Field","validate","required","component","placeholder","sendButton","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","answersElements","answers","a","isAuth","dialogItems","dialogWrapper","dialogHeader","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,yBAAyB,YAAc,6BAA6B,YAAc,6BAA6B,UAAY,2BAA2B,cAAgB,+BAA+B,cAAgB,+BAA+B,WAAa,8B,+FCW3cC,EARI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAEC,MACd,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,IAAKL,EAAMM,QCUzCC,EAdC,SAACP,GACb,OACI,yBAAKC,UAAWC,IAAEM,SACd,yBAAKP,UAAWC,IAAEO,YACd,yBAAKR,UAAWC,IAAEQ,UAAWC,IAAI,0EAC5BC,IAAI,MAGjB,yBAAKX,UAAWC,IAAEW,aAAcb,EAAMQ,WCM/BM,EAdC,SAACd,GACb,OACI,yBAAKC,UAAWC,IAAEM,SAMlB,yBAAKP,UAAWC,IAAEW,YAAc,IAAMX,IAAEa,aAAcf,EAAMQ,W,0CC6B9DQ,EAAeC,YAAiB,KAChCC,EAAWC,YAAQ,YAcnBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACrB,GACpB,OACI,0BAAMuB,SAAUvB,EAAMwB,cAClB,yBAAKvB,UAAWC,IAAEuB,WACd,kBAACC,EAAA,EAAD,CAAQC,SAAU,CAACC,IAAUZ,GAAea,UAAWX,EAAUZ,KAAM,iBAAkBwB,YAAY,yGACrG,yBAAK7B,UAAWC,IAAE6B,YACd,8CAQLC,EA7CC,SAAChC,GACb,IAAIiC,EAAQjC,EAAMkC,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYhC,KAAMgC,EAAEhC,KAAMD,GAAIiC,EAAEjC,QACzEkC,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASjC,QAASiC,EAAEjC,aAC/DkC,EAAkBT,EAAMU,QAAQN,KAAI,SAAAO,GAAC,OAAI,kBAAC,EAAD,CAASpC,QAASoC,EAAEpC,aAMjE,OAAKR,EAAM6C,OAEP,yBAAK5C,UAAWC,IAAEkC,SACd,yBAAKnC,UAAWC,IAAE4C,aACbX,GAEL,yBAAKlC,UAAWC,IAAE6C,eACd,yBAAK9C,UAAWC,IAAE8C,cAAlB,UACA,yBAAK/C,UAAWC,IAAEsC,UACbD,EACAG,GAEL,kBAACtB,EAAD,CAAqBG,SAhBb,SAAC0B,GACjBjD,EAAMkD,YAAYD,EAAOE,qBAGH,kBAAC,IAAD,CAAU/C,GAAI,Y,wCClBxCgD,EAA6B,SAACnB,GAAD,MAAY,CACzCY,OAAQZ,EAAMoB,KAAKR,S,OCiBRS,sBACXC,aAfoB,SAACtB,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAGA,SAACsB,GACxB,MAAO,CACHN,YAAa,SAAAC,GACTK,EAASC,YAAmBN,UDRR,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK5D,MAAM6C,OACT,kBAACa,EAAcE,KAAK5D,OADI,kBAAC,IAAD,CAAUI,GAAI,eAHV,GACXyD,IAAMH,WAStC,OADqCH,YAAQH,EAARG,CAAoCI,KCK9DL,CAIdtB","file":"static/js/4.d3d84182.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2rHOh\",\"dialogItems\":\"Dialogs_dialogItems__3_lK9\",\"active\":\"Dialogs_active__22-5y\",\"messageImg\":\"Dialogs_messageImg__1DpBG\",\"messages\":\"Dialogs_messages__3AKMC\",\"message\":\"Dialogs_message__CmW9J\",\"messageText\":\"Dialogs_messageText__1-FtD\",\"answersText\":\"Dialogs_answersText__2x6pu\",\"chatInput\":\"Dialogs_chatInput__10s3I\",\"chatInputArea\":\"Dialogs_chatInputArea__OXLHT\",\"dialogWrapper\":\"Dialogs_dialogWrapper__11jp_\",\"sendButton\":\"Dialogs_sendButton__1KB3W\"};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from '../Dialogs.module.scss'\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"../Dialogs.module.scss\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.messageImg}>\r\n                <img className={s.avatarImg} src=\"https://i.pinimg.com/564x/16/8a/29/168a2902c0e101744acd05e35183dd7a.jpg\"\r\n                     alt=\"\"/>\r\n            </div>\r\n\r\n        <div className={s.messageText}>{props.message}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from \"../Dialogs.module.scss\";\r\n\r\nconst Answers = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {/*<div className={s.messageImg}>*/}\r\n            {/*    <img className={s.avatarImg} src=\"https://i.pinimg.com/564x/16/8a/29/168a2902c0e101744acd05e35183dd7a.jpg\"*/}\r\n            {/*         alt=\"\"/>*/}\r\n            {/*</div>*/}\r\n\r\n        <div className={s.messageText + ' ' + s.answersText}>{props.message}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Answers;","import React from 'react';\r\nimport s from './Dialogs.module.scss';\r\nimport DialogItem from \"./DialogItems/DialogItem\";\r\nimport Message from \"./Messages/Message\";\r\nimport Answers from \"./Answers/Answers\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message}/>);\r\n    let answersElements = state.answers.map(a => <Answers message={a.message}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.dialogWrapper}>\r\n                <div className={s.dialogHeader}>Alexey</div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                    {answersElements}\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst maxLength100 = maxLengthCreator(100);\r\nconst Textarea = Element('textarea')\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.chatInput}>\r\n                <Field  validate={[required, maxLength100]} component={Textarea} name={'newMessageBody'} placeholder='Введите сообщение...'/>\r\n                <div className={s.sendButton}>\r\n                    <button>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: newMessageBody => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)\r\n(Dialogs);"],"sourceRoot":""}